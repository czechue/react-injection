module.exports = (take) => {
  take.options.shell.printStdout = true;
  take.options.shell.printStderr = true;

  return {
    '': {
      desc: 'Clean & build',
      deps: [
        'clean',
        'build',
      ],
    },
    'build': {
      desc: 'Builds the package',
      async execute() {
        await take.exec('tsc');
      },
    },
    'clean': {
      desc: 'Cleans up build output',
      async execute() {
        await take.exec('rm -rf lib');
      },
    },
    'test': {
      desc: 'Tests the package',
      async execute() {
        await take.exec('mkdir -p ./coverage')
        await take.exec('FORCE_COLOR=true yarn jest --coverage --coverageReporters=text-lcov > ./coverage/report.txt');
      },
      children: {
        'coverage': {
          desc: 'Uploads the coverage report to coveralls',
          async execute() {
            await take.exec('yarn coveralls < ./coverage/report.txt');
          },
        },
      },
    },
    'lint': {
      desc: 'Lints the src/ folder',
      async execute() {
        await take.exec('tslint --project .');
      },
    },
    'fix': {
      desc: 'Fixes lint issues in the src/ folder',
      async execute() {
        await take.exec('tslint --project .');
      },
    },
    'publish': {
      desc: 'Publishes the package to npm',
      deps: [
        ':',
        ':test',
      ],
      async execute() {
        await take.exec('yarn publish');
        await take.exec('git push origin --tags');
        await take.exec('git push');
      },
    }
  };
};
